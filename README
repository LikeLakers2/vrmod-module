This module adds some Lua functions to provide basic OpenVR support to Garry's Mod.

To install or update the module, open the "install" folder and read "INSTALLATION.txt"

#######################################################################################
# Lua functions
#######################################################################################

Function: number VRMOD_GetVersion()
Description: Returns the module version

Function: boolean VRMOD_IsHMDPresent()
Description: Returns true if a VR headset is connected

Function: VRMOD_Init()
Description: Starts OpenVR and performs some initialization.
This must be called successfully before using any of the functions listed below.
You must call VRMOD_Shutdown() before calling this again.

Function: VRMOD_Shutdown()
Description: Shuts down OpenVR and performs some clean up.
You must not call any of the functions listed below until you successfully run
VRMOD_Init() again.

Function: VRMOD_SetActionManifest( string fileName )
Description: Sets the specified file as the action manifest.
Path is relative to garrysmod/data/.
This should be called only once between init/shutdown.

Function: VRMOD_SetActiveActionSets( string actionSetName, ... )
Description: Makes the given action sets currently active.

Function: table VRMOD_GetViewParameters()
Description: Returns the following table of information that can be used to set up
proper 3D rendering
{
  number horizontalFOVLeft,
  number horizontalFOVRight,
  number aspectRatioLeft,
  number aspectRatioRight,
  number recommendedWidth,
  number recommendedHeight,
  vector eyeToHeadTransformPosLeft,
  vector eyeToHeadTransformPosRight,
}

Function: VRMOD_ShareTextureBegin()
Description: After calling this function, the next texture that is created in the game
will be shared with the module. You should create a new texture (using GetRenderTarget
for example) immediately after calling this function. This should be called only once
between init/shutdown.

Function: VRMOD_ShareTextureFinish()
Description: This must be called after creating a texture to finish the texture sharing
process. This should be called only once between init/shutdown.

Function: VRMOD_UpdatePosesAndActions()
Description: This should be called once per frame to update the poses and actions
which you can then use to render with.
This function is also responsible for syncing the fps to the headsets refresh rate.

Function: table VRMOD_GetPoses()
Description: Returns a table of poses. The hmd pose is automatically included, the
rest are defined by the action manifest.
{
  hmd = {
    vector pos,
    vector vel,
    angle ang,
    angle angvel,
  },
  ...
}

Function: table VRMOD_GetActions()
Description: Returns a table of actions (defined by the action manifest) and their states.
It could look something like this:
{
  boolean boolean_example,
  number vector1_example,
  vector2_example = {
    number x,
    number y,
  }
  skeleton_example {
    table fingerCurls = {
      number 1
      number 2
      number 3
      number 4
      number 5
    }
  }
}

Function: VRMOD_SubmitSharedTexture()
Description: Submits the shared texture to the VR Compositor. This should be called
once per frame, after you have rendered to / updated the shared texture.
The left half of the texture is used for the left eye, and the right half is used
for the right eye.

Function: VRMOD_TriggerHaptic( string actionName, number delay, number duration,
  number frequency, number amplitude )
Description: Triggers the specified vibration action (defined by the action manifest)
using the given parameters.

Function: table VRMOD_GetTrackedDeviceNames()
Description: returns a sequential numerical indexed table with names of all connected
tracked devices. For example:
{
  1 = "indexhmd"
  2 = "knuckles"
  3 = "knuckles"
}

#######################################################################################
# Compiling
#######################################################################################

To compile the module yourself:
step 1: have Visual Studio installed
step 2: make sure the path to vcvarsall is correct inside build.bat
step 3: run build.bat

#######################################################################################
# Credits / Special Thanks
#######################################################################################

-UselessGhost (https://steamcommunity.com/id/UselessGhost)
For sharing tips and the their gmod vr project
(https://bitbucket.org/uselessghost/gmcl_openvr)
-willox (https://github.com/willox)
For updating gmod which has made VR work better, as well as providing solutions for
some other issues
